{"name": "test_valid_login", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[name=\"username\"]\"}\n  (Session info: chrome=138.0.7204.169); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x0x7ff71045e935+77845]\n\tGetHandleVerifier [0x0x7ff71045e990+77936]\n\t(No symbol) [0x0x7ff710219cda]\n\t(No symbol) [0x0x7ff7102706aa]\n\t(No symbol) [0x0x7ff71027095c]\n\t(No symbol) [0x0x7ff7102c3d07]\n\t(No symbol) [0x0x7ff71029890f]\n\t(No symbol) [0x0x7ff7102c0b07]\n\t(No symbol) [0x0x7ff7102986a3]\n\t(No symbol) [0x0x7ff710261791]\n\t(No symbol) [0x0x7ff710262523]\n\tGetHandleVerifier [0x0x7ff71073684d+3059501]\n\tGetHandleVerifier [0x0x7ff710730c0d+3035885]\n\tGetHandleVerifier [0x0x7ff710750400+3164896]\n\tGetHandleVerifier [0x0x7ff710478c3e+185118]\n\tGetHandleVerifier [0x0x7ff71048054f+216111]\n\tGetHandleVerifier [0x0x7ff7104672e4+113092]\n\tGetHandleVerifier [0x0x7ff710467499+113529]\n\tGetHandleVerifier [0x0x7ff71044e298+10616]\n\tBaseThreadInitThunk [0x0x7ffe2e4c7374+20]\n\tRtlUserThreadStart [0x0x7ffe2ef9cc91+33]", "trace": "setup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"498391274090c6578c0e816c215f7712\")>\n\n    def test_valid_login(setup):\n        driver = setup\n        login = LoginPage(driver)\n>       login.login(\"Admin\", \"admin123\")\n\ntests\\test_login.py:6: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\login_page.py:8: in login\n    self.enter_text(self.userName, username)\npages\\common_page.py:9: in enter_text\n    self.driver.find_element(*by_locator).send_keys(text)\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:741: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000021649E20C20>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...ff71044e298+10616]\\\\n\\\\tBaseThreadInitThunk [0x0x7ffe2e4c7374+20]\\\\n\\\\tRtlUserThreadStart [0x0x7ffe2ef9cc91+33]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"[name=\"username\"]\"}\nE         (Session info: chrome=138.0.7204.169); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff71045e935+77845]\nE       \tGetHandleVerifier [0x0x7ff71045e990+77936]\nE       \t(No symbol) [0x0x7ff710219cda]\nE       \t(No symbol) [0x0x7ff7102706aa]\nE       \t(No symbol) [0x0x7ff71027095c]\nE       \t(No symbol) [0x0x7ff7102c3d07]\nE       \t(No symbol) [0x0x7ff71029890f]\nE       \t(No symbol) [0x0x7ff7102c0b07]\nE       \t(No symbol) [0x0x7ff7102986a3]\nE       \t(No symbol) [0x0x7ff710261791]\nE       \t(No symbol) [0x0x7ff710262523]\nE       \tGetHandleVerifier [0x0x7ff71073684d+3059501]\nE       \tGetHandleVerifier [0x0x7ff710730c0d+3035885]\nE       \tGetHandleVerifier [0x0x7ff710750400+3164896]\nE       \tGetHandleVerifier [0x0x7ff710478c3e+185118]\nE       \tGetHandleVerifier [0x0x7ff71048054f+216111]\nE       \tGetHandleVerifier [0x0x7ff7104672e4+113092]\nE       \tGetHandleVerifier [0x0x7ff710467499+113529]\nE       \tGetHandleVerifier [0x0x7ff71044e298+10616]\nE       \tBaseThreadInitThunk [0x0x7ffe2e4c7374+20]\nE       \tRtlUserThreadStart [0x0x7ffe2ef9cc91+33]\n\n..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: NoSuchElementException"}, "start": 1753641690701, "stop": 1753641690733, "uuid": "3276285e-7e46-4bcf-8182-d8002d8f63d8", "historyId": "ab68c09e23714aa68c720c2ca07c0ecf", "testCaseId": "ab68c09e23714aa68c720c2ca07c0ecf", "fullName": "tests.test_login#test_valid_login", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_login"}, {"name": "host", "value": "DESKTOP-RPVPATL"}, {"name": "thread", "value": "8060-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_login"}], "titlePath": ["tests", "test_login.py"]}